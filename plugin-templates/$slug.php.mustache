<?php
/**
 *  {{title}}
 *
 * @package {{pascaleNamespace}}/{{slugPascalCase}}
 *
 * @wordpress-plugin
 * Plugin Name:       {{title}}
 * Plugin URI:        https://wordpress.org/plugin/{{slug}}
 * Description:       {{description}}
 * Version:           {{version}}
 * Requires at least: 6.4
 * Requires PHP:      7.4
 * Author:            {{author}}
 * Author URI:        https://storepress.com/
 * Text Domain:       {{textdomain}}
 * License:           GPL v3 or later
 * License URI:       https://www.gnu.org/licenses/gpl-3.0.html
 * Domain Path:       /languages
 */

/**
 * Bootstrap the plugin.
 */

declare( strict_types=1 );

defined( 'ABSPATH' ) || die( 'Keep Silent' );

use {{pascaleNamespace}}\{{slugPascalCase}}\Plugin;

if ( ! defined( '{{constantNamespace}}_{{constantSlug}}_PLUGIN_FILE' ) ) {
	define( '{{constantNamespace}}_{{constantSlug}}_PLUGIN_FILE', __FILE__ );
}

/**
 * The function that always returns the same instance to ensure only one instance exists in the global scope at any time.
 *
 * @return Plugin
 * @since {{version}}
 */
function {{namespaceSnakeCase}}_{{slugSnakeCase}}(): Plugin {

	// Include the Plugin class.
	if ( ! class_exists( '\{{pascaleNamespace}}\{{slugPascalCase}}\Plugin' ) ) {
		require_once plugin_dir_path( __FILE__ ) . '/includes/Plugin.php';
	}

	/**
	 * If plugin has extended version
	 *
	 * @example:
	 * if ( function_exists( '{{namespaceSnakeCase}}_{{slugSnakeCase}}_pro' ) ) {
	 *  return {{namespaceSnakeCase}}_{{slugSnakeCase}}_pro();
	 * }
	 */

	return Plugin::instance();
}

/**
 * The main function that returns the Plugin class
 *
 * @return void
 * @since {{version}}
 */
function {{namespaceSnakeCase}}_{{slugSnakeCase}}_init(): void {

	{{namespaceSnakeCase}}_{{slugSnakeCase}}();
}

// Get the plugin running.
add_action( 'plugins_loaded', '{{namespaceSnakeCase}}_{{slugSnakeCase}}_init' );
